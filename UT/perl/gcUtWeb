#!/usr/bin/perl -w

#------------------------------------------------------------------------------
#                  GEOS-Chem Global Chemical Transport Model                  !
#------------------------------------------------------------------------------
#BOP
#
# !MODULE: gcUtWeb
#
# !DESCRIPTION: This perl script saves a table with the results of GEOS-Chem
#  unit test simulations to a HTML file and/or a text file.  It can also push
#  the HTML and/or text file to a web server if desired.
#\\
#\\
# !USES:
#
require 5.003;		 	     # Need this version of Perl or newer
use English;                         # Use English language
use Carp;                            # Get detailed error messages
use strict;                          # Use IMPLICIT-NONE style syntax
use FindBin qw/$RealBin/;            # Look for perl modules
use lib        $RealBin;             #  in the current folder
use UtUtils qw/&readResults
               &makeTxtMatrix
               &makeMatrix/;         # Get routines from module UtUtils.pm
#		
# !PUBLIC MEMBER FUNCTIONS:
#  &main()        : Driver routine for gcUnitTest
#
# !PRIVATE MEMBER FUNCTIONS:
#  &createWebGrid : Returns the name of the GEOS-Chem run directory
#  &pushToWebSite : Pushes the web page to the web site
#
# !CALLING SEQUENCE:
#  gcUtWeb RUNROOT RESULTS TXTFILE TEMPLATE WEBFILE WEBPUSH
#
# !REVISION HISTORY: 
#  24 Mar 2014 - R. Yantosca - Initial version
#  04 Apr 2014 - R. Yantosca - Added &pushToWebSite routine
#EOP
#------------------------------------------------------------------------------
#                  GEOS-Chem Global Chemical Transport Model                  !
#------------------------------------------------------------------------------
#BOP
#
# !IROUTINE: createWebGrid
#
# !DESCRIPTION: Program to create the HTML page w/ unit test results from 
#  the from the *.results.log file.  This lets us display results from 
#  GEOS-Chem unit test simulations in a user-friendly graphical format.
#                                                                             .
#  An easy-to-read summary of unit test results will also be sent to a text 
#  file, in case your computer system does not let you push to a web server.
#\\
#\\
# !INTERFACE:
#
sub createWebGrid($$$$$$) {
#
# !INPUT PARAMETERS:
#
  # $runRoot  : Root run directory
  # $results  : Log file w/ unit test results
  # $txtFile  : Text file to contain the summary of unit test results
  # $template : HTML template file with replaceable tokens
  # $webFile  : HTML file to contain the summary of unit test results
  # $webPush  : Remote web server location where $txtFile, $webFile will go
  my ( $runRoot, $results, $txtFile, $template, $webFile, $webPush ) = @_;
#
# !REVISION HISTORY:
#  24 Mar 2014 - R. Yantosca - Initial version
#  04 Apr 2014 - R. Yantosca - Added $webPush argument
#  22 Jun 2015 - R. Yantosca - Added $txtFile argument
#  22 Jun 2015 - R. Yantosca - Now also create a text-only summary of results
#  22 Jun 2015 - R. Yantosca - We no longer die w/ error if the $template file
#                              isn't found.  This will let you just create the
#                              text only file.
#  22 Jun 2015 - R. Yantosca - Skip creating the $txtFile or $webFile if these
#                              are equal to NONE (or None or none etc.)
#EOP
#------------------------------------------------------------------------------
#BOC

  # Make sure we can find the log file w/ the unit test results
  if ( !( -f $results ) ) { 
    print "Cannot locate the $results file...exiting!\n";
    exit(1);
  }

  # Read the results.log file and put the results in a hash
  my %unitTests = &readResults( $runRoot, $results );

  # Create the text file thats ummarizes unit test results
  # amd upload it to the remote server (if necessary)
  if ( !( $txtFile =~ /^[Nn][Oo][Nn][Ee]/ ) ) {
    &makeTxtMatrix( $txtFile, %unitTests );
    if ( -f $txtFile ) { &pushToWebSite( $txtFile, $webPush ); }
  }

  # Create the HTML file that summarizes unit test output
  # and upload it to the remote server (if necessary)
  if ( !( $webFile =~ /^[Nn][Oo][Nn][Ee]/ ) ) {
    if ( -f $template ) {
      &makeMatrix( $template, $webFile, %unitTests );
      if ( -f $webFile ) { &pushToWebSite( $webFile, $webPush ); }
    }
  }

  # Exit and pass status code back
  return( $? );
}
#EOP
#------------------------------------------------------------------------------
#                  GEOS-Chem Global Chemical Transport Model                  !
#------------------------------------------------------------------------------
#BOP
#
# !IROUTINE: pushToWebSite
#
# !DESCRIPTION: Pushes the HTML and/or text file containing the summary of
#  unit test results to a remote server.  Exits quietly if there are no
#  files to push.
#\\
#\\
# !INTERFACE:
#
sub pushToWebSite($$) {
#
# !INPUT PARAMETERS:
#
  # $webFile : Web page file containing Unit Test results
  # $webPush : Remote server path
  my ( $webFile, $webPush ) = @_;
#
# !REVISION HISTORY:
#  24 Mar 2014 - R. Yantosca - Initial version
#  13 May 2014 - R. Yantosca - Now use scp -q for quiet mode
#  22 Jun 2015 - R. Yantosca - Now use regexp to test if we should web push
#EOP
#------------------------------------------------------------------------------
#BOC

  # If we can't find the web page, exit quietly
  if ( !( -f $webFile ) ) { 
    print "Cannot locate the $webFile file...exiting!\n";
    return( -1 );
  }

  # If a remote location is specified, then push the web page to the server
  if ( !( $webPush =~ /^[Nn][Oo][Nn][Ee]/ ) ) {
    my $cmd    = "scp -q $webFile $webPush";
    my $result = qx( $cmd );
  }

  # Exit and pass status code back
  return( $? );
}
#EOC
#------------------------------------------------------------------------------
#                  GEOS-Chem Global Chemical Transport Model                  !
#------------------------------------------------------------------------------
#BOP
#
# !IROUTINE: main
#
# !DESCRIPTION: Driver program for the gcUtWeb script.
#\\
#\\
# !INTERFACE:
#
sub main(@) {
#
# !CALLING SEQUENCE:
#  gcUtWeb RUNROOT RESULTS TEMPLATE WEBFILE WEBPUSH
#
# !REVISION HISTORY:
#  24 Mar 2014 - R. Yantosca - Initial version
#  04 Apr 2014 - R. Yantosca - Now accepts the WEBPUSH argument
#  22 Jun 2015 - R. Yantosca - Updated comments
#EOP
#------------------------------------------------------------------------------
#BOC

  # Return unless we are getting 6 arguments
  if ( scalar( @ARGV ) != 6 ) { 
    print "Usage: gcUtWeb RUNROOT RESULTS TXTFILE TEMPLATE WEBFILE WEBPUSH\n"; 
    exit(1);
  }

  # Create the web page with the matrix of unit test results
  &createWebGrid( @ARGV );

  # Exit and pass status code back
  return( $? );
}
#EOC
#------------------------------------------------------------------------------

# Call main program
main();

# Exit and pass status code back to Unix shell
exit( $? );


